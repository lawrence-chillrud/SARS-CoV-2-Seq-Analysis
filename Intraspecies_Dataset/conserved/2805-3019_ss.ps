%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon May  4 01:45:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
gacucacuuucuuccacagcaagugcacuuggaaaacuucaagauguggucaaccaaaaugcacaagcuuuaaacacgcuuguuaaacaacuuagcuccaauuuuggugcaauuucaaguguuuuaaaugauauccuuucacgucuugacaaaguugaggcugaagugcaaauugauagguugaucacaggcagacuucaaaguuugcagacaua\
) } def
/len { sequence length } bind def

/coor [
[100.88541412 189.39712524]
[100.55818939 174.40069580]
[100.23096466 159.40425110]
[99.90373993 144.40782166]
[92.40552521 144.57144165]
[86.06625366 158.16606140]
[79.72697449 171.76066589]
[73.38770294 185.35528564]
[67.04843140 198.94990540]
[68.22859955 214.72703552]
[55.83744812 222.99192810]
[49.49817276 236.58654785]
[53.61198044 252.09320068]
[43.93798065 264.89138794]
[27.89723206 265.16342163]
[17.79483032 252.70062256]
[21.38047028 237.06340027]
[35.90355682 230.24728394]
[42.24283218 216.65266418]
[40.60923386 201.84791565]
[53.45381165 192.61062622]
[59.79308701 179.01602173]
[66.13236237 165.42140198]
[72.47163391 151.82678223]
[78.81090546 138.23216248]
[73.24462891 133.20558167]
[62.11206436 123.15242004]
[56.54578400 118.12583923]
[43.66585541 125.81398010]
[30.78592873 133.50212097]
[17.90600014 141.19026184]
[5.02607250 148.87838745]
[-7.85385561 156.56652832]
[-15.36917877 171.14225769]
[-31.76042366 171.65129089]
[-40.16568375 157.56996155]
[-31.93834686 143.38395691]
[-15.54199314 143.68659973]
[-2.66206527 135.99845886]
[10.21786308 128.31033325]
[23.09778976 120.62219238]
[35.97771835 112.93405151]
[48.85764694 105.24591827]
[71.62569427 76.33482361]
[98.24180603 77.58388519]
[102.12409210 63.09499741]
[106.00637817 48.60610962]
[109.88866425 34.11722183]
[113.77095032 19.62833595]
[117.65323639 5.13944864]
[121.53552246 -9.34943867]
[125.41780853 -23.83832550]
[129.30009460 -38.32721329]
[133.18237305 -52.81610107]
[137.06466675 -67.30498505]
[126.97361755 -83.34231567]
[131.73161316 -101.35285187]
[147.86367798 -110.01144409]
[151.32292175 -124.60711670]
[154.56951904 -139.25155640]
[157.60278320 -153.94166565]
[160.63604736 -168.63177490]
[163.66931152 -183.32188416]
[166.70257568 -198.01199341]
[159.96501160 -200.31227112]
[153.73922729 -205.00692749]
[148.86012268 -211.94567871]
[146.10462952 -220.69490051]
[146.09832764 -230.56245422]
[142.00572205 -244.99334717]
[137.91311646 -259.42422485]
[133.82052612 -273.85513306]
[129.72792053 -288.28601074]
[125.63532257 -302.71691895]
[120.28516388 -310.11578369]
[121.58977509 -317.38751221]
[117.70748901 -331.87637329]
[113.82520294 -346.36526489]
[109.94291687 -360.85415649]
[106.06063843 -375.34304810]
[102.17835236 -389.83193970]
[98.29606628 -404.32083130]
[88.12309265 -404.52584839]
[78.25990295 -406.98175049]
[69.19764709 -411.56134033]
[61.38653183 -418.03179932]
[55.21341705 -426.06649780]
[50.98266983 -435.26150513]
[48.90116119 -445.15588379]
[49.06814575 -455.25479126]
[51.47054291 -465.05419922]
[55.98383713 -474.06610107]
[62.37850952 -481.84283447]
[70.33171082 -487.99923706]
[79.44355774 -492.23171997]
[77.05395508 -507.04016113]
[67.21700287 -519.43145752]
[72.82794952 -533.22882080]
[70.43834686 -548.03723145]
[68.04874420 -562.84570312]
[57.27752686 -575.21148682]
[62.85621262 -590.63256836]
[79.04592896 -593.24505615]
[89.19207764 -580.36145020]
[82.85717773 -565.23529053]
[85.24678040 -550.42687988]
[87.63638306 -535.61840820]
[97.30241394 -524.28631592]
[91.86238861 -509.42974854]
[94.25199127 -494.62130737]
[113.85860443 -490.06750488]
[129.55416870 -477.39184570]
[138.17262268 -459.09927368]
[137.95283508 -438.83297729]
[128.89839172 -420.64868164]
[112.78495026 -408.20309448]
[116.66723633 -393.71423340]
[120.54952240 -379.22534180]
[124.43180847 -364.73645020]
[128.31408691 -350.24755859]
[132.19638062 -335.75866699]
[136.07865906 -321.26977539]
[140.06620789 -306.80950928]
[144.15881348 -292.37863159]
[148.25141907 -277.94772339]
[152.34400940 -263.51684570]
[156.43661499 -249.08595276]
[160.52920532 -234.65505981]
[167.13072205 -231.09555054]
[170.45767212 -245.72195435]
[170.46443176 -260.72195435]
[181.49679565 -270.88494873]
[196.44696045 -269.66326904]
[205.68299866 -257.84396362]
[203.25439453 -243.04187012]
[190.72573853 -234.79350281]
[180.33374023 -223.97654724]
[186.93525696 -220.41703796]
[201.24101257 -224.92762756]
[215.54676819 -229.43821716]
[229.85252380 -233.94880676]
[237.09265137 -239.51188660]
[244.39923096 -238.41932678]
[258.76907349 -242.72137451]
[273.13891602 -247.02342224]
[287.50875854 -251.32546997]
[301.87860107 -255.62751770]
[316.24844360 -259.92956543]
[330.61828613 -264.23162842]
[344.98812866 -268.53366089]
[358.42773438 -278.86871338]
[372.07934570 -268.81533813]
[366.19799805 -252.91421509]
[349.29019165 -254.16381836]
[334.92034912 -249.86177063]
[320.55050659 -245.55972290]
[306.18066406 -241.25767517]
[291.81082153 -236.95562744]
[277.44097900 -232.65357971]
[263.07113647 -228.35153198]
[248.70127869 -224.04948425]
[234.36309814 -219.64305115]
[220.05734253 -215.13246155]
[205.75160217 -210.62187195]
[191.44584656 -206.11129761]
[181.39268494 -194.97872925]
[178.35942078 -180.28862000]
[175.32615662 -165.59851074]
[172.29289246 -150.90840149]
[169.25962830 -136.21829224]
[171.08682251 -131.80946350]
[170.16645813 -126.20623016]
[165.91859436 -121.14787292]
[162.45935059 -106.55220032]
[170.40849304 -98.37435150]
[173.45603943 -87.26010895]
[170.73381042 -75.93844604]
[162.80528259 -67.24739838]
[151.55355835 -63.42270279]
[147.67126465 -48.93381500]
[143.78898621 -34.44492722]
[139.90669250 -19.95603943]
[136.02441406 -5.46715307]
[132.14212036 9.02173424]
[128.25984192 23.51062202]
[124.37755585 37.99950790]
[120.49526978 52.48839569]
[116.61298370 66.97728729]
[112.73069763 81.46617126]
[136.82090759 96.94016266]
[135.70355225 136.99076843]
[142.62977600 150.29592896]
[149.55599976 163.60108948]
[156.48223877 176.90625000]
[163.40846252 190.21141052]
[170.33470154 203.51657104]
[177.26092529 216.82173157]
[191.37501526 225.17184448]
[190.93011475 241.56495667]
[176.38389587 249.13723755]
[162.70025635 240.09898376]
[163.95576477 223.74797058]
[157.02952576 210.44281006]
[150.10330200 197.13764954]
[143.17707825 183.83247375]
[136.25083923 170.52731323]
[129.32461548 157.22215271]
[122.39838409 143.91699219]
[114.90016937 144.08059692]
[115.22739410 159.07704163]
[115.55461884 174.07347107]
[115.88184357 189.06990051]
[116.20906067 204.06632996]
[116.53605652 219.06275940]
[101.53961182 219.38952637]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 25]
[6 24]
[7 23]
[8 22]
[9 21]
[11 19]
[12 18]
[28 43]
[29 42]
[30 41]
[31 40]
[32 39]
[33 38]
[45 189]
[46 188]
[47 187]
[48 186]
[49 185]
[50 184]
[51 183]
[52 182]
[53 181]
[54 180]
[55 179]
[58 174]
[59 173]
[60 170]
[61 169]
[62 168]
[63 167]
[64 166]
[69 128]
[70 127]
[71 126]
[72 125]
[73 124]
[74 123]
[76 122]
[77 121]
[78 120]
[79 119]
[80 118]
[81 117]
[82 116]
[95 110]
[96 109]
[98 107]
[99 106]
[100 105]
[138 165]
[139 164]
[140 163]
[141 162]
[143 161]
[144 160]
[145 159]
[146 158]
[147 157]
[148 156]
[149 155]
[150 154]
[191 208]
[192 207]
[193 206]
[194 205]
[195 204]
[196 203]
[197 202]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
